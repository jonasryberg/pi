<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Perl | Jonas@pi]]></title>
  <link href="http://pi.ryberg.org/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://pi.ryberg.org/"/>
  <updated>2014-01-05T19:22:26+00:00</updated>
  <id>http://pi.ryberg.org/</id>
  <author>
    <name><![CDATA[Jonas Ryberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Webbstyrd Pi-kamera]]></title>
    <link href="http://pi.ryberg.org/blog/2013/10/26/webbstyrd-pi-kamera/"/>
    <updated>2013-10-26T14:06:59+00:00</updated>
    <id>http://pi.ryberg.org/blog/2013/10/26/webbstyrd-pi-kamera</id>
    <content type="html"><![CDATA[<p>Regning oktoberlördag. Barnen är på utflykt och jag och <a href="http://www.anst.uu.se/marry118/">min bror biologen</a> bestämmer oss för att leka med Raspeberry Pi-cam. Tanken är att bygga en kamera som vi kan styra via en webbsida. Första steget är att installera en webbserver. Efter att ha strulat en bra stund med lighttpd, eftersom den enligt internets samlade visdom kräver mindre resurser än klassiska Apache, så väljer vi i alla fall Apache då den ger felmeddelanden som faktiskt kan tolkas.</p>

<!-- more -->


<pre><code>sudo apt-get install apache
</code></pre>

<p>tar hand om att installera Apache-servern på pi:n.
För att testa om det fungerat är det bra att surfa in till Raspberryn från en annan dator. Att kolla den lokala ip-adressen görs enkelt i</p>

<pre><code>/sbin/ifconfig
</code></pre>

<p>Om allt fungerat ska du se en testsida från Apache.</p>

<p>Fungerar allt som det ska är det dags för nästa steg, att skapa en webbsida som kan användas för att styra Raspberry Cam. På Raspberry Pi skapar vi en fil som heter kamera.html med</p>

<pre><code>sudo nano kamera.html
</code></pre>

<p>I Nano bygger vi först en enkel sida med en kameraknapp som sedan ska starta ett Perl-script som kan styra kameran. Vi använder &ldquo;form&rdquo; för att senare kunna lägga till olika parametrar till raspistill, kommandot som sköter pi-kameran.</p>

<pre><code>&lt;html&gt;

&lt;form method="get" action="/cgi-bin/kamera.cgi"&gt;
&lt;input type="submit" value="Ta bild"&gt;
&lt;/form&gt;

&lt;/html&gt;
</code></pre>

<p>Sidan sparar vi i www-foldern för att Apache ska kunna hitta den.</p>

<p>Nästa steg är att skapa ett Perl-script som kan ta bilder. Det visade sig vara ganska krångligt att få att fungera med rättigheterna som krävs för att kameramodulen ska kunna spara bilden. Men till slut fungerade det <a href="http://fc07.deviantart.net/fs71/i/2012/116/4/f/great_success_by_merionminor-d4xmjry.png">Great success!</a></p>

<p>Lösningen blev att lägga till www-data som sudo utan lösenord och känns inte helt tillfredsställande.</p>

<p>Perl-scriptet i kamera.cgi blev så här:</p>

<pre><code>#! /usr/bin/perl

use strict;
print "Content-type: text/html\n\n";
print "&lt;html&gt;";
system "sudo /usr/bin/raspistill -o \"/var/www/bild.jpg\" -vf -n;
print '&lt;img src="http://pi.ryberg.org/bild.jpg"&gt;';
print "&lt;/html&gt;";
</code></pre>

<p>Glöm inte heller att köra chmod +x på filen för att den ska kunna köras av webbservern.</p>
]]></content>
  </entry>
  
</feed>
