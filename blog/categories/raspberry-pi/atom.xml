<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Raspberry_Pi | Jonas@pi]]></title>
  <link href="http://pi.ryberg.org/blog/categories/raspberry-pi/atom.xml" rel="self"/>
  <link href="http://pi.ryberg.org/"/>
  <updated>2014-01-05T19:52:38+00:00</updated>
  <id>http://pi.ryberg.org/</id>
  <author>
    <name><![CDATA[Jonas Ryberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ir-foto med pi:n]]></title>
    <link href="http://pi.ryberg.org/blog/2014/01/05/ir-foto-med-pi-n/"/>
    <updated>2014-01-05T19:05:01+00:00</updated>
    <id>http://pi.ryberg.org/blog/2014/01/05/ir-foto-med-pi-n</id>
    <content type="html"><![CDATA[<p>Pi-noir, Raspberry Pi-foundations kamera utan ir-filter har legat i min låda ett tag utan att jag egentligen haft tid att testa den. Men igår tog jag mig tid att montera den. Den fungerar egentligen precis på samma sätt och med samma kommandon som den vanliga kameran med det undantaget att Pi-noir saknar ir-filter framför kamerans sensor. Pi-kameran är precis som alla digitalkameror kännslig för ir-ljus. I normala fall stör det bildkvaliteten men vill man skapa fina effekter eller forografera i mörker kan det vara riktigt användbart.</p>

<p>Bilderna jag tog här hemma är dock inte mycket att yvas över. Roligast verkar det vara att fotografera utomhus med filter och mycket gröna växter. Jag nöjde mig med att plåta en pelargon.</p>

<p><img src="http://pi.ryberg.org/images/ir-blomma.jpg" alt="blomma fotad med ir-kamera" />
<em>Pelargon fotad med ir-kamera och blått filter</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intervallfoto 2.0]]></title>
    <link href="http://pi.ryberg.org/blog/2013/11/10/intervallfoto-2-0/"/>
    <updated>2013-11-10T14:06:59+00:00</updated>
    <id>http://pi.ryberg.org/blog/2013/11/10/intervallfoto-2-0</id>
    <content type="html"><![CDATA[<p>I förra <a href="http://pi.ryberg.org/blog/2013/10/26/webbstyrd-pi-kamera/">inlägget</a> berättade jag hur jag och min bror biologen styrde min Raspberry pi-kamera via en webbserver. Nästa steg är att på ett enkelt sätt få den att ta intervallbilder för att skapa en enkel stop-motion-film. Tanken är förstås att kunna placera ut Pi:n på ett lämpligt ställe, kolla att allt ser bra ut genom att ta en bild och sedan sätta igång intervallfotot. För att göra det enklare ska vi också låta Pi:en räkna ut hur många bilder den behöver ta för att skapa en film av en viss längd.</p>

<!-- more -->


<p>Första steget är att ändra den ursprungliga webbsidan något så att det blir möjligt att ange under vilken tidsperiod kameran ska fotografera och hur lång den slutliga filmen ska bli.</p>

<p>Ungefär så här blir koden till sidan då:</p>

<pre><code>&lt;html&gt;&lt;form method="get" action="/cgi-bin/kamera.cgi"&gt;&lt;input type="submit" value="Ta bild"&gt;&lt;/form&gt;
&lt;br&gt;&lt;br&gt;
&lt;form method="get" action="/cgi-bin/timelaps.cgi"&gt;Film längd: &lt;input type="text" name="film_langd" value="1"min&lt;br&gt;
Inspelnings längd: &lt;input type="text" name="insp_tid" value="1"h&lt;br&gt;&lt;input type="submit" value="intervallfoto"&gt;&lt;/form
&lt;/html&gt;
</code></pre>

<p>Nästa steg är att se till att det finns ett perl-script som kan hämta värdena som matats in i webbformuläret och be kameran att starta intervallfotot. I exemplet har vi döpt den filen till timelaps.cgi. Koden i filen ser ut så här:</p>

<pre><code>#! /usr/bin/perl
use strict;
print "Content-type: text/html\n\n";
my $film_langd;
my $insp_tid;
if ($ENV{'QUERY_STRING'} =~ /film_langd=([0-9\.]+)/) { $film_langd=$1; }
if ($ENV{'QUERY_STRING'} =~ /insp_tid=([0-9\.]+)/) { $insp_tid=$1; }
print "&lt;html&gt;";
$insp_tid *= 3600000;
my $intervall= $insp_tid/($film_langd*60*24);
print "&lt;p&gt;sudo /usr/bin/raspistill -o \"/var/www/pictures/ivbild%i.jpg\" -t $insp_tid -vf -hf -w 1920 -h 1080 -tl $intervall -n&lt;/p&gt;";
system "sudo /usr/bin/raspistill -o \"/var/www/pictures/ivbild%i.jpg\" -t $insp_tid -vf -hf -w 1920 -h 1080 -tl $intervall -n";
print "&lt;p&gt;H&amp;auml;r &amp;aumlr din.&lt;/p&gt;";
print '&lt;a href="http://pi.ryberg.org/pictures/film.h264"&gt;film!&lt;/a&gt;';
print "&lt;/html&gt;";
</code></pre>

<p>Koden räknar ut hur många bilder som ska tas för att det ska gå att skapa en film av önskad längd med 24 bilder per sekund. Om man väljer för kort filmtid i förhållande till inspelningstiden blir det problem eftersom kameran inte hinner ta bilderna tillräckligt fort. I praktiken är det dock knappast ett problem.</p>

<p>Jag passade också på att lägga in en knapp för att slå av pi:n när plåtandet är klart. Den koden finns här:</p>

<pre><code>#! /usr/bin/perl 
system "sudo /sbin/shutdown -h now";
</code></pre>

<p>Glöm inte att köra <code>chmod +x</code> på alla filerna med kod så att webservern kan starta dem.</p>

<p>Här är resultatet av mitt första test. Jag har använt programmet mencoder för att foga samman bilderna till en film, kolla <a href="http://pi.ryberg.org/texter/intervallfoto_med_Raspberry_Pi">den här texten</a> om du vill veta hur.</p>

<iframe width="560" height="315" src="http://pi.ryberg.org//www.youtube.com/embed/akjcLrhI0mM" frameborder="0" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intervallfoto med Raspberry Pi]]></title>
    <link href="http://pi.ryberg.org/blog/2013/05/26/intervallfoto-med-rasoberry-pi/"/>
    <updated>2013-05-26T14:06:59+00:00</updated>
    <id>http://pi.ryberg.org/blog/2013/05/26/intervallfoto-med-rasoberry-pi</id>
    <content type="html"><![CDATA[<object width="640" height="360"><param name="movie" value="//www.youtube.com/v/2a77FLHoxE4?version=3&amp;hl=en_US"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://pi.ryberg.org//www.youtube.com/v/2a77FLHoxE4?version=3&amp;hl=en_US" type="application/x-shockwave-flash" width="640" height="360" allowscriptaccess="always" allowfullscreen="true"></embed></object>


<p>Jag slog till och köpte den nya kameramodulen till Raspberry Pi när jag besökte Webhallen i Fruängen i går. Den ser inte mycket ut för världen och som kamera betraktat kan den närmast jämföras med en mycket enkel mobilkamera utan autofokus. Den monteras via en plattkabel direkt på datorkortet, allt som sedan krävs för att den ska fungera är en uppdatering av datorns firmware med: <code>sudo apt-get update</code>
och
<code>sudo apt-get upgrade</code>.</p></p>

<!-- more -->


<p>Sedan behöver kameran aktiveras i <code>raspi-config</code>.</p>

<p>Kameran kontrolleras från terminalfönstret med <code>raspivid</code> för video och <code>raspistill</code> för bilder. Alla kamerans funktioner, som att välja iso-värde, längd på inspelad film eller att tala om vilken fil bilden ska sparas till görs genom tillägg direkt i terminalen.</p>

<p>En av de roligare funktionerna är möjligheten att göra time-laps eller intervallfoton. Jag riggade upp min Pi lite snyggt i fönstret för att testa att ta en bildserie.</p>

<p><img src="http://pi.ryberg.org/images/picam-300x195.jpg" title="Pi i fönster" alt="Pi i fönster" /></p>

<p>Det är inte helt praktiskt att fota med hjälp av kommandon i terminalfönstret, men ganska kul. Följande rad använde jag för att göra ta bilderna som jag sedan använt till filmen ovan:</p>

<p><code>raspistill -o &ldquo;bild%i.jpg&rdquo; -vf -hf -t 3600000 -tl 5000</code></p>

<p>Kommandot <code>raspstill</code> talar om att jag vill ta en bild, <code>-o &ldquo;bild%i.jpg&rdquo;</code> berättar att jag vill att bilderna ska sparas som bild1.jpg, bild2.jpg, bild3.jpg osv. Tilläggen <code>-vf</code> och <code>-hf</code> betyder att bilden ska först spegelvändas (kameran tar alla bilder spegelvända) och sedan vändas upp och ned (jag hade satt kameran upp och ned).</p>

<p>Slutligen betyder <code> -t 36000000</code> att jag vill att fotograferingen ska pågå i 36 miljoner millisekunder, dvs en timma, och <code>-tl 5000</code> är tiden mellan varje bild.</p>

<p>Efter en timma fanns bildserien klar i en mapp på minneskortet i datorn. Med ledning av den <a href="http://designspark.com/blog/time-lapse-photography-with-the-raspberry-pi-camera">här killen</a> hittade jag programmet Mencoder som kan användas för att foga samman bilderna till en film. Mencoder installeras med:
&lt;<code>sudo apt-get install mencoder</code></p>

<p>För att Mencoder ska kunna hitta rätt bilder i rätt ordning behöver den en textfil med alla filnamn. Den skapas enkelt enligt följande:</p>

<p><code>ls -t -r *.jpg &gt; bilder.txt</code></p>

<p><code>ls</code> listar som bekant alla filer i en mapp, <code>-t -r</code> talar om att du vill ha dem i tidsordning med den äldsta först <code> *.jpg</code> att det bara ska vara bildfiler och <code>&gt; bilder.txt</code> att allt ska skrivas i en fil ned just det namnet.</p>

<p>Sedan snodde jag instruktionerna för Mencoder rakt av så här:</p>

<p><code>mencoder -nosound -ovc lavc -lavcopts vcodec=mpeg4:aspect=16/9:vbitrate=8000000 -vf scale=1920:1080 -o tlcam.avi -mf type=jpeg:fps=24 mf://@bilder.txt</code></p>

<p>Det gjorde att filmen blev utdragen i 16:9 format och inte det format som bilderna var tagna i från början. Nästa försök ska jag se till att fånga bilderna i samma format som filmen är tänkt att vara i. Det borde spara tid när filmen kodas och minne när bilderna tas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordPress på Raspberry Pi]]></title>
    <link href="http://pi.ryberg.org/blog/2013/05/06/wordpress-pa-raspberry-pi/"/>
    <updated>2013-05-06T14:06:59+00:00</updated>
    <id>http://pi.ryberg.org/blog/2013/05/06/wordpress-pa-raspberry-pi</id>
    <content type="html"><![CDATA[<p>Jag vet inte riktigt vad jag ska ha den till, men nu finns i alla fall en WordPress-blogg på en <a href="http://www.raspberrypi.org/">Raspberry Pi</a> i min garderob. Det tog en stund att få det hela att fungera. Och det krävde lite hjälp från min <a href="http://www.anst.uu.se/marry118/">bror biologen</a>. Vi får se hur länge det är kul och hur länge den får stanna.</p>

<p><img src="images/raspi-server.jpg" alt="En liten server" /></p>

<p><em>En Pi-server fritt hängande i usb-sladden från routern. Det visade sig nämligen att usb-kontakten på min router ger tillräckligt med kräm för att driva pi:n.</em></p>
]]></content>
  </entry>
  
</feed>
